{"version":3,"sources":["Store/Actions/task.js","Store/ActionTypes/tasks.js","devConfig.js","Assets/Modal.js","Store/Actions/ui.js","Store/ActionTypes/ui.js","ToDo/Task.js","ToDo/ToDo.js","Store/Actions/auth.js","Store/ActionTypes/auth.js","Navigation/Navigation.js","Authentication/SignIn.js","Authentication/Register.js","Layout.js","App.js","serviceWorker.js","Store/utility/utility.js","Store/Reducers/auth.js","Store/Reducers/ui.js","Store/Reducers/task.js","index.js"],"names":["listTasks","token","dispatch","type","headers","Content-Type","authorization","axios","get","then","data","payload","listTaskSuccess","catch","err","listTaskFail","ModalC","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","toggleModal","closeBtn","react_default","a","createElement","className","onClick","Modal","isOpen","modalOpen","ModalHeader","close","modalTitle","ModalBody","children","React","Component","connect","state","ui","Task","setState","collapse","deleteTaskHandler","id","localStorage","getItem","deleteTask","createdTime","dist_default","fromNow","createdOn","timeRemaining","toNow","endDate","Collapse","Card","CardHeader","title","CardBody","description","Button","color","console","log","delete","taskDeleteSuccess","taskDeleteFailed","taskDelete","Preview","Link","to","ToDo","createTask","e","preventDefault","modalToggle","submitHandler","tokenAvailable","isLoggedIn","Error","getDetails","_this2","modal","modalState","Assets_Modal","onSubmit","autoComplete","onChange","target","value","Input","ModalFooter","size","ToDo_Preview","tasks","map","task","ToDo_Task","key","_id","createdDate","auth","username","notLoggedIn","actualToken","checkLoginSuccess","checkLogin","post","createTaskFail","withRouter","Navigation","logoutHandler","setTimeout","logout","clear","nullify","history","push","authButtons","outline","style","marginLeft","data-toggle","data-target","SignIn","handleSubmit","login","email","password","loginSuccess","loginErr","error","errorMessage","redirector","Redirect","name","placeholder","success","loginErrMessage","setItem","response","Register","registerUser","redirect","registerError","Content-type","resp","message","register","Layout","src_Navigation_Navigation","marginTop","Switch","Route","path","exact","component","App","src_Layout","Boolean","window","location","hostname","match","updateObject","oldObject","updatedValues","objectSpread","initialState","loading","regSuccess","authReducer","arguments","length","undefined","action","uiReducer","taskReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.421a8c71.chunk.js","sourcesContent":["import * as actions from \"../ActionTypes/tasks\";\nimport axios from \"axios\";\nimport * as devProcess from '../../devConfig';\nimport {modalToggle} from './ui';\n\n/* #region Create  */\n\nconst createTaskStart = () => {\n  return {\n    type: actions.task_create_start\n  };\n};\n\nconst createTaskSuccess = () => {\n  return {\n    type: actions.task_create_success\n  };\n};\n\nconst createTaskFail = err => {\n  return {\n    type: actions.task_create_fail,\n    payload: err\n  };\n};\nexport const createTask = (token, title, description, endDate) => {\n  return dispatch => {\n    dispatch(createTaskStart());\n    let headers = {\n      \"Content-Type\": \"application/json\",\n      authorization: token\n    };\n    let data = {\n      title: title,\n      description: description,\n      endDate: endDate\n    };\n    axios\n      .post(devProcess.REACT_APP_TASK_CREATE,data, {headers:headers})\n      .then(data => {\n        dispatch(createTaskSuccess(data));\n        dispatch(listTasks(token));\n        dispatch(modalToggle());\n      })\n      .catch(err => {\n        dispatch(createTaskFail(err));\n      });\n  };\n};\n\n/* #endregion */\n\n//Task delete\n/* #region Delete */\n\nconst taskDeleteStarted = () => {\n  return {\n    type: actions.task_delete_start\n  };\n};\nconst taskDeleteFailed = err => {\n  return {\n    type: actions.task_delete_fail,\n    payload: err\n  };\n};\n\nconst taskDeleteSuccess = data => {\n  return {\n    type: actions.task_delete_success,\n    payload: data //contains the id\n  };\n};\n\nexport const taskDelete = (id, token) => {\n  let headers = {\n    \"Content-Type\": \"application/json\",\n    authorization: token,\n    id: id\n  };\n  console.log(headers);\n  return dispatch => {\n    dispatch(taskDeleteStarted());\n    axios\n      .delete(devProcess.REACT_APP_TASK_DELETE, {headers:headers})\n      .then(data => {\n        dispatch(taskDeleteSuccess(data));\n        dispatch(listTasks(token));\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(taskDeleteFailed(err));\n      });\n  };\n};\n\n/* #endregion */\n\n//Task Update\n/* #region Task Update */\n\nconst taskUpdateStart = () => {\n  return {\n    type: actions.tasks_update_start\n  };\n};\n\nconst taskUpdateFail = err => {\n  return {\n    type: actions.tasks_update_fail\n  };\n};\n\nconst taskUpdateSuccess = data => {\n  return {\n    type: actions.tasks_update_success,\n    payload: data\n  };\n};\n\nexport const taskUpdate = (id, token, title, description, endDate) => {\n  return dispatch => {\n    dispatch(taskUpdateStart());\n    let headers = {\n      \"Content-Type\": \"application/json\",\n      authorization: token,\n      id: id\n    };\n    let data = {\n      title: title,\n      description: description,\n      endDate: endDate\n    };\n    axios\n      .put(devProcess.REACT_APP_TASK_UPDATE, data, { headers: headers })\n      .then(data => {\n        dispatch(taskUpdateSuccess(data));\n      })\n      .catch(err => {\n        dispatch(taskUpdateFail(err));\n      });\n  };\n};\n\n/* #endregion */\n\n//List\n\n/* #region ListTasks */\nconst listTasksStarted = () => {\n  return {\n    type: actions.tasks_getall_start\n  };\n};\nconst listTaskSuccess = data => {\n  return {\n    type: actions.tasks_getall_success,\n    payload: data.data.data\n  };\n};\n\nconst listTaskFail = err => {\n  return {\n    type: actions.tasks_getall_fail,\n    err: err\n  };\n};\nexport const listTasks = token => {\n  return dispatch => {\n    dispatch(listTasksStarted());\n    let headers = {\n      \"Content-Type\": \"application/json\",\n      authorization: token\n    };\n    axios\n      .get(devProcess.REACT_APP_TASK_LIST, {headers:headers})\n      .then(data => {\n        dispatch(listTaskSuccess(data));\n      })\n      .catch(err => {\n        dispatch(listTaskFail(err));\n      });\n  };\n};\n/* #endregion */\n\n//Nullify tasks after logout\n\nexport const nullifyTasks=()=>{\n    return{\n      type:actions.nullify_tasks\n    }\n}","export const task_create_start=\"TASK_CREATE_START\";\nexport const task_create_fail=\"TASK_CREATE_FAIL\";\nexport const task_create_success=\"TASK_CREATE_SUCCESS\";\n\nexport const tasks_getall_start=\"TASK_GET_START\";\nexport const tasks_getall_fail=\"TASK_GET_FAIL\";\nexport const tasks_getall_success=\"TASK_GET_SUCCESS\";\n\n\nexport const tasks_update_start=\"TASK_UPDATE_START\";\nexport const tasks_update_success=\"TASK_UPDATE_SUCCESS\";\nexport const tasks_update_fail=\"TASK_UPDATE_FAIL\";\n\nexport const task_delete_start=\"TASK_DELETE_START\";\nexport const task_delete_fail=\"TASK_DELETE_FAIL\";\nexport const task_delete_success=\"TASK_DELETE_SUCCESS\";\n\n\nexport const nullify_tasks=\"TASK_NULLIFY\";\n","export const REACT_APP_GET_USER_DETAILS=\"http://localhost:3001/api/auth/userDetails\";\nexport const REACT_APP_LOGIN_URL=\"http://localhost:3001/api/auth/login\";\nexport const REACT_APP_REGISTER_URL=\"http://localhost:3001/api/auth/register\";\nexport const REACT_APP_TASK_CREATE=\"http://localhost:3001/api/tasks/newTask\";\nexport const REACT_APP_TASK_DELETE=\"http://localhost:3001/api/tasks/delete\";\nexport const REACT_APP_TASK_UPDATE=\"http://localhost:3001/api/tasks/update\";\nexport const REACT_APP_TASK_LIST=\"http://localhost:3001/api/tasks\";","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { modalToggle } from \"../Store/Actions/ui\";\n\nclass ModalC extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  toggle = () => {\n    this.props.toggleModal();\n  };\n  render() {\n    const closeBtn = (\n      <button className=\"close\" onClick={this.toggle}>\n        &times;\n      </button>\n    );\n    return (\n      <div>\n        <Modal isOpen={this.props.modalOpen} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle} close={closeBtn}>\n            {this.props.modalTitle}\n          </ModalHeader>\n          <ModalBody>{this.props.children}</ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    modalOpen: state.ui.modalOpen\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: () => {\n      dispatch(modalToggle());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalC);\n","import * as actions from '../ActionTypes/ui';\n\nexport const modalToggle=()=>{\n    return {\n        type:actions.MODAL_TOGGLE\n    }\n}\n\n","export const MODAL_TOGGLE='MODAL_TOGGLE';","import React from \"react\";\nimport { Collapse, Button, CardHeader, CardBody, Card } from \"reactstrap\";\nimport { taskDelete } from \"../Store/Actions/task\";\nimport { connect } from \"react-redux\";\nimport Modal from '../Assets/Modal';\nimport Moment from 'react-moment';\n\n\n//Title\n//Description\n//ID\n//EndDate\nclass Task extends React.Component {\n  constructor(props) {\n      super(props);\n    this.state = {\n      collapse: false\n    };\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n  deleteTaskHandler = () => {\n    let id = this.props.id;\n    let token = localStorage.getItem(\"jwt\");\n    this.props.deleteTask(id, token);\n  };\n  render() {\n    let createdTime=<Moment fromNow >{this.props.createdOn}</Moment>;\n    let timeRemaining=<Moment toNow>{this.props.endDate}</Moment>\n    return (\n      <div>\n        <Collapse isOpen={this.state.collapse}>\n          <Card>\n            <CardHeader onClick={this.toggle}>\n              <h3>{this.props.title}</h3>\n            </CardHeader>\n            <CardBody>\n              <p>Description:{this.props.description}</p>\n              <p>Task ends {timeRemaining}</p>\n              <p>Task created {createdTime}</p>\n              <Button color=\"danger\" onClick={this.deleteTaskHandler}>\n                Delete Task\n              </Button>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <div>\n          <li\n            className=\"list-group-item d-flex flex-row justify-content-between\"\n            onClick={this.toggle}\n          >\n            <span>{this.props.title}</span>\n          </li>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n        modalOpen:state.ui.modalOpen\n    }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: (id, token) => dispatch(taskDelete(id,token))  \n  };\n};\nexport default connect(null,mapDispatchToProps)(Task);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { checkLoginFail, checkLogin } from \"../Store/Actions/auth\";\nimport { listTasks, createTask } from \"../Store/Actions/task\";\nimport Task from \"./Task\";\nimport { modalToggle } from \"../Store/Actions/ui\";\nimport Modal from \"../Assets/Modal\";\nimport { ModalFooter, Input, Button } from \"reactstrap\";\n\nconst Preview=(props)=>{\n  return(\n    <div>\n      <h1>Task Management Made Easy</h1>\n      <Link to=\"/login\">Click Here to Login</Link>\n    </div>\n  );\n}\n\nclass ToDo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tokenAvailable: false,\n      title: \"\",\n      description: \"\",\n      endDate: \"\",\n      isLoggedIn: false\n    };\n  }\n  componentDidMount() {\n    //Get the token from localstorage\n    try {\n      let token = localStorage.getItem(\"jwt\");\n      if (!token) {\n        throw new Error(\"Token not found\");\n      }\n      this.props.getDetails(token);\n      console.log(\"Requesting for the list of tasks\");\n      this.props.listTasks(token);\n    } catch (err) {\n      console.log(\"Not logged in\");\n    }\n  }\n\n  createTask = e => {\n    e.preventDefault();\n    this.props.modalToggle();\n  };\n  toggle = () => [this.props.modalToggle()];\n\n  submitHandler = e => {\n    e.preventDefault();\n    let token = localStorage.getItem(\"jwt\");\n    this.props.createTask(\n      token,\n      this.state.title,\n      this.state.description,\n      this.state.endDate\n    );\n  };\n\n  render() {\n    let modal = this.props.modalState ? (\n      <div>\n        <Modal modalTitle=\"New Task\">\n          <form onSubmit={this.submitHandler}>\n            <div className=\"form-group\">\n              <label>Title</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                onChange={e => this.setState({ title: e.target.value })}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Description</label>\n              <textarea className=\"form-control rounded-10\" onChange={e=>this.setState({description:e.target.value})}></textarea>\n\n              {/* <input\n                className=\"form-control\"\n                type=\"textarea\"\n                autoComplete=\"off\"\n                onChange={e => this.setState({ description: e.target.value })}\n              /> */}\n            </div>\n            <div className=\"form-group\">\n              <label>End Date</label>\n              <Input\n                type=\"date\"\n                onChange={e => this.setState({ endDate: e.target.value })}\n              />\n            </div>\n            <ModalFooter>\n              <Button color=\"success\" size=\"lg\" type=\"submit\">\n                Create Task\n              </Button>\n              <button onClick={this.toggle} className=\"btn btn-danger btn-lg\">\n                Cancel\n              </button>\n            </ModalFooter>\n          </form>\n        </Modal>\n      </div>\n    ) : null;\n    return (\n      <div>\n        <div>\n          <div>\n            {modal}\n            <div className=\"container\" id=\"startContainer\">\n              <div className=\"row\">\n\n                {this.props.isLoggedIn&&<div className=\"col-10\">\n                  <h1 className=\"d-flex flex-row justify-content-between\">\n                    My Tasks\n                    <button\n                      className=\"btn btn-primary\"\n                      type=\"button\"\n                      onClick={this.createTask}\n                    >\n                      Create New Task\n                    </button>\n                    <h2>Days Left</h2>\n                  </h1>\n                </div>}\n                {!this.props.isLoggedIn&&<Preview/>}\n              </div>\n              <div className=\"col-md-10\">\n                {this.props.tasks.map(task => (\n                  <Task\n                    title={task.title}\n                    description={task.description}\n                    endDate={task.endDate}\n                    key={task._id}\n                    id={task._id}\n                    createdOn={task.createdDate}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n    tasks: state.task.tasks,\n    username: state.auth.username,\n    modalState: state.ui.modalOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    notLoggedIn: () => dispatch(checkLoginFail()),\n    getDetails: token => dispatch(checkLogin(token)),\n    listTasks: token => dispatch(listTasks(token)),\n    modalToggle: () => dispatch(modalToggle()),\n    createTask: (token, title, description, endDate) =>\n      dispatch(createTask(token, title, description, endDate))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(ToDo));\n","import * as actions from \"../ActionTypes/auth\";\nimport axios from \"axios\";\nimport * as devProcess from '../../devConfig'; \nimport {listTasks} from '../Actions/task';\n\n\n\n/* #region CheckLogin */\n\nconst checkLoginStart = () => {\n  return {\n    type: actions.check_login_start\n  };\n};\n\nconst checkLoginSuccess = (token,actualToken) => {\n  return {\n    type: actions.check_login_success,\n    data: token,\n    token:actualToken\n  };\n};\n\nexport const checkLoginFail = err => {\n  return {\n    type: actions.check_login_fail,\n    payload: \"AutoLogin Failed\"\n  };\n};\n\nexport const checkLogin = token => {\n  return dispatch => {\n    dispatch(checkLoginStart());\n    console.log(\"Make a call to the server to fetch the details\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"authorization\": token\n    };\n    axios\n      .get(devProcess.REACT_APP_GET_USER_DETAILS,{headers:headers})\n      .then(data => {\n        console.log(data);\n        dispatch(checkLoginSuccess(data, token));\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(checkLoginFail());\n      });\n  };\n};\n/* #endregion */\n\n/* #region Login */\nconst loginStart = () => {\n  return {\n    type: actions.login_start\n  };\n};\nconst loginFail = err => {\n  return {\n    type: actions.login_fail,\n    payload: \"Login Failed\"\n  };\n};\n\nconst loginSuccess = token => {\n  return {\n    type: actions.login_success,\n    token: token.data.token\n  };\n};\n\nexport const login = (email, password) => {\n  return dispatch => {\n    dispatch(loginStart());\n    let data={\n      email:email,\n      password:password\n    }\n    let headers={ \"Content-Type\": \"application/json\" } \n    axios\n      .post(devProcess.REACT_APP_LOGIN_URL, data, {headers:headers})\n      .then(token => {\n        dispatch(loginSuccess(token));\n        localStorage.setItem('jwt', token.data.token);\n        localStorage.setItem('loggedIn', true);\n        dispatch(listTasks(token.data.token));\n      })\n      .catch(err => {\n        dispatch(loginFail(err.response));\n      });\n  };\n};\n/* #endregion */\n\n/* #region Register Region */\n\nconst registrationStart=()=>{\n  return{\n    type:actions.register_start\n  }\n};\n\nconst registerSuccess=(successMessage)=>{\n  return{\n    type:actions.register_success,\n    payload:successMessage\n  }\n};\n\nconst registerFail=(failMessage)=>{\n  return{\n    type:actions.register_fail,\n    payload:failMessage\n  }\n};\nexport const register=(email, password, username)=>{\n    return dispatch=>{\n      dispatch(registrationStart());\n      let headers={\n        \"Content-type\":\"application/json\"\n      }\n      let data={\n        email:email,\n        password:password,\n        username:username\n      }\n\n      axios\n      .post(devProcess.REACT_APP_REGISTER_URL, data, {headers:headers})\n      .then(resp=>{\n        console.log(resp);\n        dispatch(registerSuccess(resp.data.data));\n      })\n      .catch(err=>{\n        console.log(err.response.data.message);\n        dispatch(registerFail(err.response.data.message));\n      });\n    }\n}\n\n\nexport const Logout=()=>{\n  return{\n    type:actions.logout\n  }\n}\n\n\n","export const login_start='LOGIN_START';\nexport const login_fail='LOGIN_FAIL';\nexport const login_success='LOGIN_SUCCESS';\n\nexport const register_start='REGISTER_START';\nexport const register_fail='REGISTER_FAIL';\nexport const register_success='REGISTER_SUCCESS';\n\nexport const check_login_start='CHECK_LOGIN_START';\nexport const check_login_fail='CHECK_LOGIN_FAIL';\nexport const check_login_success='CHECK_LOGIN_SUCCESS';\n\n\nexport const logout='LOGOUT';\n","import React, { Component, ReactDOM } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Logout } from \"../Store/Actions/auth\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport './Navigation.css';\nimport {Button} from 'reactstrap';\nimport {nullifyTasks} from '../Store/Actions/task';\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  logoutHandler=()=>{\n      setTimeout(()=>{\n        this.props.logout();\n        localStorage.clear();\n        this.props.nullify();\n        setTimeout(()=>{\n          this.props.history.push('/login');\n        },500);\n      },1000)\n  }\n\n  render() {\n    const authButtons = this.props.isLoggedIn ? (\n      <button className=\"btn btn-primary\" type=\"button\" id=\"authbuttons\" onClick={this.logoutHandler}> \n        Log Out\n      </button>\n    ) : (\n      <div>\n        {\" \"}\n        <Link to=\"/register\">\n        <Button color=\"primary\" outline>\n        Register\n        </Button>\n        </Link>\n        <Link to=\"/login\">\n        <Button color=\"success\" outline style={{marginLeft:\"10px\"}}>Login</Button>\n        </Link>\n      </div>\n    );\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark navbar-expand-md fixed-top bg-dark\">\n          <div className=\"container-fluid\">\n            <Link className=\"navbar-brand\" to=\"/\">\n              <i className=\"icon ion-ios-football\" />\n              &nbsp;GoalTracker\n            </Link>\n            <button\n              className=\"navbar-toggler\"\n              data-toggle=\"collapse\"\n              data-target=\"#navcol-1\"\n            >\n              <span className=\"sr-only\">Toggle navigation</span>\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div\n              className=\"collapse navbar-collapse d-flex flex-row-reverse\"\n              id=\"navcol-1\"\n            />\n            {authButtons}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(Logout()),\n    nullify:()=>dispatch(nullifyTasks())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Navigation));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { login } from \"../Store/Actions/auth\";\nimport { Redirect , withRouter} from \"react-router-dom\";\nimport {listTasks} from '../Store/Actions/task';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Submit Successful\");\n    this.props.login(this.state.email, this.state.password);\n    setTimeout(()=>{\n      if(this.props.loginSuccess){\n        this.props.history.push('/');\n      }\n    },1000);\n};\n  \n\n\n  render() {\n    let loginErr=this.props.error?<p>{this.props.errorMessage}</p>:null;\n    const redirector=!this.props.isLoggedIn?<div className=\"login-clean\">\n    <form onSubmit={this.handleSubmit}>\n      <h2 className=\"sr-only\">Login Form</h2>\n      <div className=\"illustration\">\n        <h1>Login</h1>\n        <i className=\"icon ion-ios-football\" />\n      </div>\n      <div className=\"form-group\">\n        <input\n          autoComplete=\"off\"\n          className=\"form-control\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={e => this.setState({ email: e.target.value })}\n          value={this.state.email}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={e => this.setState({ password: e.target.value })}\n          autoComplete=\"off\"\n          className=\"form-control\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={this.state.password}\n        />\n      </div>\n      <div className=\"form-group\">\n        <button className=\"btn btn-primary btn-block\" type=\"submit\">\n          Log In\n        </button>\n        {loginErr}\n      </div>\n    </form>\n  </div>:<Redirect to=\"/\"/>\n\n    return (\n      <div>\n        {redirector}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n    loginSuccess: state.auth.success,\n    error: state.auth.error,\n    errorMessage: state.auth.loginErrMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, password) => dispatch(login(email, password))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(SignIn));\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link, withRouter} from 'react-router-dom';\nimport {register} from '../Store/Actions/auth';\n\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            email:'',\n            password:'',\n            username:''\n        }\n    }\n\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.registerUser(this.state.email, this.state.password, this.state.username);\n        setTimeout(()=>{\n            if(this.props.redirect){\n                this.props.history.push('/login');\n            }\n        },1000)\n    }\n    render(){\n        let errorMessage=this.props.error?<p>{this.props.errorMessage}</p>:null\n        return(\n            <div>\n                <div className=\"login-clean\">\n          <form onSubmit={this.handleSubmit}>\n            <h2 className=\"sr-only\">Login Form</h2>\n            <div className=\"illustration\">\n              <h1>Sign Up</h1>\n              <i className=\"icon ion-ios-football\" />\n            </div>\n            <div className=\"form-group\">\n              <input\n                autoComplete=\"off\"\n                className=\"form-control\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={e => {\n                  this.setState({ email: e.target.value });\n                }}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                autoComplete=\"off\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Username\"\n                onChange={e => {\n                  this.setState({ username: e.target.value });\n                }}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                autoComplete=\"off\"\n                className=\"form-control\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={e => {\n                  this.setState({ password: e.target.value });\n                }}\n              />\n            </div>\n            <div className=\"form-group\">\n            {errorMessage}\n              <button className=\"btn btn-primary btn-block\" type=\"submit\">\n                Sign Up\n              </button>\n            </div>\n          </form>\n        </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n        redirect:state.auth.redirect,\n        error:state.auth.registerError,\n        errorMessage:state.auth.errorMessage\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        registerUser:(email, password, username)=>dispatch(register(email, password, username))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ToDo from \"./ToDo/ToDo\";\nimport Navigation from \"./Navigation/Navigation\";\nimport SignIn from \"./Authentication/SignIn\";\nimport Register from \"./Authentication/Register\";\n\nclass Layout extends React.Component {\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <div style={{marginTop:\"70px\"}}>\n        <Switch>\n          <Route path=\"/\" exact component={ToDo}/>\n          <Route path=\"/login\" exact component={SignIn}/>\n          <Route path=\"/register\" exact component={Register}/>\n        </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport Layout from './Layout';\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    return(\n      <div>\n        <Layout/>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const updateObject=(oldObject, updatedValues)=>{\n    return{\n        ...oldObject,\n        ...updatedValues\n    }\n}\n\nexport default updateObject;","import * as actionTypes from \"../ActionTypes/auth\";\nimport updateObject from \"../utility/utility\";\n\nconst initialState = {\n  isLoggedIn: false,\n  username: false,\n  loading: false,\n  error: false,\n  registerError:false,\n  errorMessage: '',\n  loginErrMessage:'',\n  regSuccess: false,\n  token: null,\n  data:null,\n  redirect:false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Check Login\n    case actionTypes.check_login_start:\n      return updateObject(state, { loading: true, isLoggedIn: false });\n    case actionTypes.check_login_fail:\n      return updateObject(state, { loading: false, isLoggedIn: false });\n    case actionTypes.check_login_success:\n      return updateObject(state, {\n        loading: false,\n        isLoggedIn: true,\n        token: action.token,\n        username: action.data.data.username\n      });\n    //Login Start\n    case actionTypes.login_start:\n      return updateObject(state, { loading: true, isLoggedIn: false});\n\n    case actionTypes.login_success:\n      return {\n        ...state,\n        loading: false,\n        isLoggedIn: true,\n        success: true,\n        token: action.token\n      };\n    case actionTypes.login_fail:\n      return updateObject(state, {\n        loading: false,\n        error: true,\n        loginErrMessage: action.payload\n      });\n    //Register Start\n    case actionTypes.register_start:\n      return updateObject(state, { loading: true });\n    case actionTypes.register_success:\n      return updateObject(state, {\n        loading: false,\n        isLoggedIn: false,\n        regSuccess: true,\n        redirect:true\n      });\n    case actionTypes.register_fail:\n      return updateObject(state, {\n        loading: false,\n        registerError: true,\n        redirect:false,\n        errorMessage:action.payload\n      });\n\n    case actionTypes.logout:\n      return updateObject(state, {\n        loading: false,\n        username: false,\n        token: null,\n        isLoggedIn: false,\n        success:false\n      });\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actions from '../ActionTypes/ui';\n\nconst initialState={\n    modalOpen:false\n}\n\nconst uiReducer=(state=initialState,action)=>{\n    switch(action.type){\n        case actions.MODAL_TOGGLE:\n            return{\n                ...state,\n                modalOpen:!state.modalOpen\n            }\n        default:\n            return state\n    }\n}\nexport default uiReducer;","import * as actions from '../ActionTypes/tasks';\nimport utility from '../utility/utility';\n\nconst initialState={\n    error:false,\n    loading:false,\n    tasks:[]\n}\n\nconst taskReducer=(state=initialState, action)=>{\n    switch(action.type){\n        //Task Create\n        case actions.task_create_start:\n            return{\n                ...state,\n                loading:true\n            }\n        case actions.task_create_fail:\n            return{\n                ...state,\n                loading:false,\n                error:true\n            }\n        case actions.task_create_success:\n            return{\n                ...state,\n                loading:false,\n                error:false\n            }\n        //Task Remove\n        case actions.task_delete_start:\n            return{\n                ...state,\n                loading:true,\n                error:false\n            }\n        case actions.task_delete_fail:\n            return{\n                ...state,\n                loading:false,\n                error:true\n            }\n        case actions.task_delete_success:\n            return{\n                ...state,\n                loading:false,\n                data:action.payload\n            }\n        //task Get All\n        case actions.tasks_getall_start:\n            return{\n                ...state,\n                loading:true\n            }\n        case actions.tasks_getall_fail:\n            return{\n                ...state,\n                error:true\n            }\n        case actions.tasks_getall_success:\n            return{\n                ...state,\n                tasks:action.payload,\n                loading:false\n            }\n        case actions.nullify_tasks:\n            return{\n                ...state,\n                tasks:[]\n            }\n        default:\n            return state;\n    }\n}\n\nexport default taskReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport authReducer from '../src/Store/Reducers/auth';\nimport uiReducer from '../src/Store/Reducers/ui';\nimport taskReducer from '../src/Store/Reducers/task';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nimport thunk from 'redux-thunk';\n\nconst rootReducer=combineReducers({\n    auth:authReducer,\n    ui:uiReducer,\n    task:taskReducer\n});\n\nconst composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store=createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><BrowserRouter><App/></BrowserRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}