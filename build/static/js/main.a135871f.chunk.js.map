{"version":3,"sources":["Components/Navigation.js","Components/Body.js","Components/Todo/task.js","Components/Home.js","Components/Login.js","Components/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","console","log","this","props","react_default","a","createElement","className","Link","to","data-toggle","data-target","id","type","onClick","loginHanlder","React","Component","withRouter","Task","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","backgroundColor","setState","collapse","state","remaining","dist_default","duration","Date","now","date","endDate","Collapse","isOpen","Card","CardHeader","title","CardBody","description","Button","color","completeTask","HomeComponent","assignComplete","prevState","tasks","completed","_this2","map","task","Todo_task","key","LoginComponent","handleSubmit","event","preventDefault","axios","method","url","data","email","password","config","headers","Content-Type","then","token","localStorage","setItem","setTimeout","history","push","catch","err","response","onSubmit","autoComplete","name","placeholder","onChange","e","target","value","SignUpComponent","username","success","error","errorMessage","succceMessage","App","style","marginTop","Components_Navigation","Route","path","exact","component","LogOutComponent","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a135871f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter, Route, Link } from \"react-router-dom\";\n\n\nclass Navigation extends React.Component {\n    componentDidMount(){\n        console.log(this.props);\n        \n    }\n\n\n    render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark navbar-expand-md fixed-top bg-dark\">\n          <div className=\"container-fluid\">\n            <Link className=\"navbar-brand\" to=\"/\">\n              <i className=\"icon ion-ios-football\" />\n              &nbsp;GoalTracker\n            </Link>\n            <button\n              className=\"navbar-toggler\"\n              data-toggle=\"collapse\"\n              data-target=\"#navcol-1\"\n            >\n              <span className=\"sr-only\">Toggle navigation</span>\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div\n              className=\"collapse navbar-collapse d-flex flex-row-reverse\"\n              id=\"navcol-1\"\n            >\n              <Link to=\"/signUp\">\n                <button\n                  className=\"btn btn-primary auth\"\n                  type=\"button\"\n                  id=\"authbuttons\"\n                >\n                  Sign Up\n                </button>\n              </Link>\n              <Link to=\"/signIn\">\n                <button className=\"btn btn-outline-primary\" type=\"button\" onClick={this.loginHanlder}>\n                  Sign In\n                </button>\n              </Link>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Navigation);\n","import React, {Component} from 'react';\n\nexport default class Body extends React.Component{\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        return(\n            <div>\n                This is the Body component\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport Moment from \"react-moment\";\nimport { Collapse, Button, CardHeader,CardBody, Card } from \"reactstrap\";\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false\n    };\n  }\n  toggle = () => {\n      console.log(this.backgroundColor);\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  };\n\n  render() {\n    const backgroundColor=this.state.collapse?\"#3bb300\":\"#ffffff\";\n    const remaining = (\n      <Moment duration={Date.now()} date={this.props.endDate} />\n    );\n\n    return (\n      <div>\n        <Collapse isOpen={this.state.collapse}>\n          <Card>\n              <CardHeader onClick={this.toggle}><h3>{this.props.title}</h3></CardHeader>\n            <CardBody>\n              <p>Description:{this.props.description}</p>\n              <p>Time Remaining:{remaining}</p>\n              <Button color=\"primary\" onClick={this.props.completeTask}>Assign Completed</Button>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <div>\n          <li className=\"list-group-item d-flex flex-row justify-content-between\" onClick={this.toggle} >\n            <span>{this.props.title}</span>\n            <span className=\"badge badge-primary\">{remaining}</span>\n          </li>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Task;\n","import React, { Component } from \"react\";\nimport Task from \"./Todo/task\";\nimport Moment from \"react-moment\";\n\nexport default class HomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [\n        {\n          id: 1,\n          title: \"Hello world this is Shivaraj Bakale\",\n          description: \"Hello World this is Shivaraj Bakale\",\n          endDate: \"2019-02-13\",\n          completed:false\n        },\n        {\n            id:2,\n            title:\"Shankar Bakale constructing a house\",\n            description:\"I am constructing a new house\",\n            endDate:\"2019-03-13\",\n            completed:true\n        }\n      ]\n    };\n  }\n  assignComplete=(id)=>{\n      this.setState(prevState=>{\n          console.log(prevState);\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\" id=\"startContainer\">\n          <div className=\"row\">\n            <div className=\"col-10\">\n              <h1 className=\"d-flex flex-row justify-content-between\">\n                My Tasks\n                <button className=\"btn btn-primary\" type=\"button\" data-target=\"#myModal\">\n                  Create New Task\n                </button>\n                <h2>Days Left</h2>\n              </h1>\n            </div>\n          </div>\n          <div className=\"contentdiv\">\n            <div className=\"row\">\n              <div className=\"col-10\">\n                <ul className=\"list-group\">{\n                    this.state.tasks.map(task=>{\n                     return <Task key={task.id} completed={task.completed} completeTask={()=>this.assignComplete(task.id)} title={task.title} description={task.description} endDate={task.endDate}/>\n                    })\n                }</ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nclass LoginComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  //Method for submitting sign in form details\n  handleSubmit = event => {\n    event.preventDefault();\n    axios({\n      method: \"POST\",\n      url: \"https://nameless-headland-34291.herokuapp.com/api/auth/login\",\n      data: { email: this.state.email, password: this.state.password },\n      config: { headers: { \"Content-Type\": \"application/json\" } }\n    })\n      .then(data => {\n        console.log(data.data.token);\n        localStorage.setItem(\"jwt\", data.data.token);\n        setTimeout(()=>{\n          this.props.history.push('/');\n        },3000);\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"login-clean\">\n          <form onSubmit={this.handleSubmit}>\n            <h2 className=\"sr-only\">Login Form</h2>\n            <div className=\"illustration\">\n              <h1>Login</h1>\n              <i className=\"icon ion-ios-football\" />\n            </div>\n            <div className=\"form-group\">\n              <input\n                autoComplete=\"off\"\n                className=\"form-control\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={e => this.setState({ email: e.target.value })}\n                value={this.state.email}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                onChange={e => this.setState({ password: e.target.value })}\n                autoComplete=\"off\"\n                className=\"form-control\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                value={this.state.password}\n              />\n            </div>\n            <div className=\"form-group\">\n              <button className=\"btn btn-primary btn-block\" type=\"submit\">\n                Log In\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginComponent);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass SignUpComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n      error: {\n        error: false,\n        errorMessage: \"\"\n      },\n      success:{\n        success:false,\n        succceMessage:\"\" \n      }\n    };\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    axios({\n      method: \"POST\",\n      url: \"https://nameless-headland-34291.herokuapp.com/api/auth/register\",\n      data: {\n        email: this.state.email,\n        password: this.state.password,\n        username: this.state.username\n      },\n      config: { headers: { \"Content-Type\": \"application/json\" } }\n    })\n      .then(data => {\n        console.log(data);\n        if (data.data.success == false) {\n          this.setState({\n            error: { error: true, errorMessage: \"User Already Exists\" }\n          });\n          console.log(this.state);\n        }\n        else{\n          this.setState({\n            success:{success:true, succceMessage:\"Successfully Authenticated..Redirecting to login\"}\n          });\n        }\n        setTimeout(()=>{\n          this.props.history.push('/signin');\n        },3000);\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n  };\n  \n  render() {\n    return (\n      <div>\n        <div className=\"login-clean\">\n          <form onSubmit={this.handleSubmit}>\n            <h2 className=\"sr-only\">Login Form</h2>\n            <div className=\"illustration\">\n              <h1>Sign Up</h1>\n              <i className=\"icon ion-ios-football\" />\n            </div>\n            <div className=\"form-group\">\n              <input\n                autoComplete=\"off\"\n                className=\"form-control\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={e => {\n                  this.setState({ email: e.target.value });\n                }}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                autoComplete=\"off\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Username\"\n                onChange={e => {\n                  this.setState({ username: e.target.value });\n                }}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                autoComplete=\"off\"\n                className=\"form-control\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={e => {\n                  this.setState({ password: e.target.value });\n                }}\n              />\n            </div>\n            {\n              this.state.error.error?<p>{this.state.error.errorMessage}</p>:null\n            }\n            {\n              this.state.success.success?<p>{this.state.success.succceMessage}</p>:null\n            }\n            <div className=\"form-group\">\n              <button className=\"btn btn-primary btn-block\" type=\"submit\">\n                Sign Up\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignUpComponent);\n","import React, {Component} from 'react';\nimport Navigation from './Components/Navigation';\nimport Body from './Components/Body';\nimport {Route, Link} from 'react-router-dom';\nimport HomeComponent from './Components/Home';\nimport LoginComponent from './Components/Login';\nimport LogOutComponent from './Components/SignUp';\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n  }\n\n\n  render(){\n    return (\n      <div style={{marginTop:\"80px\"}}>\n      <Navigation/>\n      <Route path=\"/\" exact component={HomeComponent}/>\n      <Route path=\"/signin\" exact component={LoginComponent}/>\n      <Route path=\"/signup\" exact component={LogOutComponent}/>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(<BrowserRouter>\n    <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}